initSidebarItems({"constant":[["DIVISIBILITY_MAXIMUM","The maximum divisibility supported."],["DIVISIBILITY_NONE","Not divisible."]],"enum":[["AccessRule",""],["AccessRuleNode",""],["MintParams","Represents the minting config"],["Mutability",""],["ParseBucketError","Represents an error when decoding bucket."],["ParseNonFungibleAddressError","Represents an error when parsing non-fungible address."],["ParseNonFungibleIdError","Represents an error when decoding non-fungible id."],["ParseProofError","Represents an error when decoding proof."],["ParseVaultError","Represents an error when decoding vault."],["ProofRule","Resource Proof Rules"],["ProofValidationError","Represents an error when validating proof."],["ProofValidationMode","Specifies the validation mode that should be used for validating a `Proof`."],["ResourceAddress","Represents a resource address."],["ResourceMethodAuthKey",""],["ResourceType","Represents the type of a resource."],["SoftCount",""],["SoftDecimal",""],["SoftResource",""],["SoftResourceOrNonFungible",""],["SoftResourceOrNonFungibleList",""]],"fn":[["init_resource_system","Initializes resource subsystem."],["require",""],["require_all_of",""],["require_amount",""],["require_any_of",""],["require_n_of",""],["resource_system","Returns the resource subsystem."]],"struct":[["AccessRules","Method authorization rules for a component"],["AuthZoneClearInput",""],["AuthZoneCreateProofByAmountInput",""],["AuthZoneCreateProofByIdsInput",""],["AuthZoneCreateProofInput",""],["AuthZonePopInput",""],["AuthZonePushInput",""],["Bucket","Represents a transient resource container."],["BucketCreateProofInput",""],["BucketGetAmountInput",""],["BucketGetNonFungibleIdsInput",""],["BucketGetResourceAddressInput",""],["BucketPutInput",""],["BucketTakeInput",""],["BucketTakeNonFungiblesInput",""],["ComponentAuthZone","Represents the auth zone, which is used by system for checking if this component is allowed to"],["ConsumingBucketBurnInput",""],["ConsumingProofDropInput",""],["NonFungible","Represents a non-fungible unit."],["NonFungibleAddress","Identifier for a non-fungible unit."],["NonFungibleId","Represents a key for a non-fungible resource"],["Proof","Represents a proof of owning some resource."],["ProofCloneInput",""],["ProofGetAmountInput",""],["ProofGetNonFungibleIdsInput",""],["ProofGetResourceAddressInput",""],["ResourceBuilder","Utility for setting up a new resource."],["ResourceManager","Represents a resource manager."],["ResourceManagerCreateBucketInput",""],["ResourceManagerCreateInput",""],["ResourceManagerCreateVaultInput",""],["ResourceManagerGetMetadataInput",""],["ResourceManagerGetNonFungibleInput",""],["ResourceManagerGetResourceTypeInput",""],["ResourceManagerGetTotalSupplyInput",""],["ResourceManagerLockAuthInput",""],["ResourceManagerMintInput",""],["ResourceManagerNonFungibleExistsInput",""],["ResourceManagerUpdateAuthInput",""],["ResourceManagerUpdateMetadataInput",""],["ResourceManagerUpdateNonFungibleDataInput",""],["ResourceSystem","Represents the Radix Engine resource subsystem."],["SchemaPath","Describes a value located in some sbor given a schema for that sbor"],["ValidatedProof","Represents a proof of owning some resource that has had its resource address validated."],["Vault","Represents a persistent resource container on ledger state."],["VaultCreateProofByAmountInput",""],["VaultCreateProofByIdsInput",""],["VaultCreateProofInput",""],["VaultGetAmountInput",""],["VaultGetNonFungibleIdsInput",""],["VaultGetResourceAddressInput",""],["VaultLockFeeInput",""],["VaultPutInput",""],["VaultTakeInput",""],["VaultTakeNonFungiblesInput",""]],"trait":[["NonFungibleData","Represents the data structure of a non-fungible."]]});